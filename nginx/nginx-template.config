user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    #include /etc/nginx/conf.d/*.conf;

	server {
		listen 80 default_server;
		server_name _;

		return 404;
	}
	server {
		listen 443 ssl default_server;
		server_name _;
		ssl_certificate /etc/nginx/certs/default/fullchain1.pem;
		ssl_certificate_key /etc/nginx/certs/default/privkey1.pem;

		return 404;
	}

{% for service in serviceDetails %}
	server {
		listen 80;
		server_name {{service["subDomain"]}}.{{domain}};

		location /.well-known/acme-challenge {
			alias /etc/nginx/challenges/.well-known/acme-challenge;
			try_files $uri =404;
		}
		location / {
			return 301 https://{{service["subDomain"]}}.{{domain}};
		}
	}
	server {
		listen 443 ssl;
		server_name {{service["subDomain"]}}.{{domain}};

		ssl_certificate /etc/nginx/certs/{{service["subDomain"]}}/fullchain1.pem;
		ssl_certificate_key /etc/nginx/certs/{{service["subDomain"]}}/privkey1.pem;

		location / {
                        proxy_set_header    Host $host;
                        proxy_set_header    X-Real-IP $remote_addr;
                        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
                        proxy_set_header    X-Forwarded-Proto $scheme;
                        {% if service["extraHeaders"] is defined %}
                            {% for set in service["extraHeaders"] %}
                                {{set["command"]}}  {{set["value"]}};
                            {% endfor %}
                        {% endif %}
                        proxy_pass          {{service["proxyPass"]}};
		}
	}
{% endfor %}
}